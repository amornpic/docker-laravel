version: "3.7"
services:
  app:
    build:
      context: .
      dockerfile: app.dockerfile
    container_name: ${CONTAINER_NAME}
    working_dir: /var/www/
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www
    networks:
      - pp-platform

  db:
    image: mysql:5.7
    container_name: ${CONTAINER_NAME}-db
    restart: unless-stopped
    ports:
      - "33060:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - ./.docker/db_data:/var/lib/mysql
    networks:
      - pp-platform

  nginx:
    image: nginx:alpine
    container_name: ${CONTAINER_NAME}-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./src/public:/var/www/public
      - ./.docker/nginx:/etc/nginx/conf.d
    networks:
      - pp-platform

  redis:
    image: redis
    container_name: ${CONTAINER_NAME}-redis
    restart: unless-stopped
    ports:
      - "63790:6379"
    networks:
      - pp-platform

  # mailhog:
  #   image: mailhog/mailhog
  #   container_name: ${CONTAINER_NAME}-mailhog
  #   restart: unless-stopped
  #   ports:
  #     - "10250:1025"
  #     - "2025:8025"
  #   networks:
  #     - pp-platform

networks:
  pp-platform:
    external:
      name: pp-platform
